#!/bin/bash

# List of go name whitelist, a space separate list of <we prefer>:<golint suggests> items.
WHITELISTED="Cpu:CPU"
ALLOWED_NONFIRST=""
ALLOWED_BLANKIMPORT=""

print_usage () {
    echo "usage $0 [gofluff options] [golint options] golint arguments"
    echo "The possible gofluff options are:"
    echo "  --whitelist <wl>          whitelist the given terms from getting golinted"
    echo "      <wl> is a comma-separated list of <we-prefer>=<golint-suggests> items"
    echo "  --allow-nonfirst <al>     protect non-first function parameters getting golinted"
    echo "      <al> is a comma-separated list of <function-name>=<parameter-type> items"
    echo "  --allow-blankimport <bl>  allow blank imports in the liste files"
    echo "      <bl> is a comma-separated list of files."
    echo "  --golint <golint>   use the given golint path"
    echo "  --debug             enable debugging messages"
    echo "  --trace             run with set -x"
    echo "  --help              this message + golints help"
    echo ""
    echo "golint usage:"
    $GOLINT -h
    exit 0
}

fatal () {
    echo "fatal error: $@"
    exit 1
}

debug () {
    if [ -n "$DEBUG" ]; then
        echo "$*"
    fi
}

go_lint () {
    $GOLINT $*
}

passthrough () {
    echo "$line"
    EXIT_STATUS=1
}

allowed_nonfirst () {
    param=${msg%% *}
    for FnName in $ALLOWED_NONFIRST; do
        fn=${FnName%=*}
        name="${FnName#*=}"
        file="${loc%%:*}"
        lnum="${loc%:*}"
        lnum="${lnum#*:}"

        debug "* check non-first $param against $name in $fn@$file:$lnum..."

        if [ "$param" != "$name" ]; then
            continue
        fi

        head -$((lnum + 1)) $file | tail -2 | tr -s '\t ' ' ' | \
            tr -s '()' ':' | sed 's/^func :[^:]*://g;s/:.*$//g;s/ *//g' | \
            grep -q $fn
        if [ "$?" = "0" ]; then
            debug "* $param allowed for function $fn..."
            return 0
        fi
    done

    return 1
}

allowed_blankimport () {
    file="${loc%%:*}"
    for f in $ALLOWED_BLANKIMPORT; do
        debug "* check blank import in \"$file\" against allowed \"$f\"..."
        case $file in
            $f|./$f)
                debug "* blank import allowed in $file..."
                return 0
                ;;
        esac
    done

    return 1
}

whitelisted () {
    complaint="$msg"
    case $complaint in
        *" should be "*)
            offending="${complaint%% should be*}"
            offending="${offending##* }"
            suggested="${complaint##* should be }"
            ;;
        *)
            return 1
            ;;
    esac

    for wl in $WHITELISTED; do 
        src=${wl%=*}
        dst=${wl#*=}
        transform_offending="\${offending//$src/$dst}"

        if [ "$(eval echo $transform_offending)" = "$suggested" ]; then
            debug "* matching whitelist entry $wl: $offending -> $suggested"
            return 0
        fi
    done

    return 1
}

go_fluff () {
    while read -r line; do 
        loc=${line%: *}
        msg=${line##*: }

        case $msg in
            *"consistent with "*|*"should have"*|"comment on exported"*)
                passthrough
                continue
                ;;
            *"the first parameter"*)
                if ! allowed_nonfirst; then
                    passthrough
                    continue
                fi
                ;;
            "a blank import should be"*)
                if ! allowed_blankimport; then
                    passthrough
                    continue
                fi
                ;;
            *"should be"*)
                if ! whitelisted; then
                    passthrough
                fi
                ;;
            *)
                passthrough
                continue
                ;;
        esac

        debug "filtered [$msg] @ <$loc>"
    done

    exit $EXIT_STATUS
}

GOLINT=$(command -v golint)

while [ "${1#-}" != "$1" ]; do
    case $1 in
        --whitelist)
            WHITELISTED="$WHITELISTED ${2//,/ }"
            shift 2
            ;;
        --allow-nonfirst)
            ALLOWED_NONFIRST="$ALLOWED_NONFIRST ${2//,/ }"
            shift 2
            ;;
        --allow-blankimport)
            ALLOWED_BLANKIMPORT="$ALLOWED_BLANKIMPORT ${2//,/ }"
            shift 2
            ;;
        --golint)
            GOLINT=$2
            shift 2
            ;;
        --debug)
            DEBUG=1
            shift
            ;;
        --trace)
            set -x
            shift
            ;;
        --help|-h)
            shift
            print_usage
            ;;
        *)
            break
            ;;
    esac
done

if [ -z "$GOLINT" ]; then
    if [ "$?" != 0 -o -z "$GOLINT" ]; then
        fatal "can't gofluff, golint neither found nor given..."
    fi
else
    if [ ! -x $GOLINT ]; then
        fatal "given golint ($GOLINT) is not executable..."
    fi
fi

EXIT_STATUS=0
go_lint $* | go_fluff
