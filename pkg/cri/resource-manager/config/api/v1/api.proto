/*
Copyright 2019 Intel Corporation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package v1;
option go_package = "v1";

service Config{
    rpc SetConfig(SetConfigRequest) returns (SetConfigReply) {}
    rpc SetAdjustment(SetAdjustmentRequest) returns (SetAdjustmentReply) {}
}

message SetConfigRequest {
    // node_name is node name used to acquire this configuration.
    string node_name = 1;
    // config is the ConfigMap data.
    map<string, string> config = 2;
}

message SetConfigReply {
     // If not empty, indicate an error that happened while trying to apply new configuration.
    string error = 1;
}

message SetAdjustmentRequest {
    // node_name is node name used to acquire this configuration.
    string node_name = 1;
    // Serialized map of all adjustment CRDs, name as key, CRD as value.
    string adjustment = 2;
}

message SetAdjustmentReply {
    // If not empty, indicates that errors happened while trying to apply the adjustments.
    map<string, string> errors = 1;
}
