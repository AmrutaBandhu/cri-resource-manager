// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/cri/resource-manager/config/api/v1/api.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetConfigRequest struct {
	// node_name is node name used to acquire this configuration.
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// config is the ConfigMap data.
	Config               map[string]string `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetConfigRequest) Reset()         { *m = SetConfigRequest{} }
func (m *SetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetConfigRequest) ProtoMessage()    {}
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d9bc9cf5b527561, []int{0}
}

func (m *SetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigRequest.Unmarshal(m, b)
}
func (m *SetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigRequest.Marshal(b, m, deterministic)
}
func (m *SetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigRequest.Merge(m, src)
}
func (m *SetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetConfigRequest.Size(m)
}
func (m *SetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigRequest proto.InternalMessageInfo

func (m *SetConfigRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *SetConfigRequest) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetConfigReply struct {
	// If not empty, indicate an error that happened while trying to apply new configuration.
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetConfigReply) Reset()         { *m = SetConfigReply{} }
func (m *SetConfigReply) String() string { return proto.CompactTextString(m) }
func (*SetConfigReply) ProtoMessage()    {}
func (*SetConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d9bc9cf5b527561, []int{1}
}

func (m *SetConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigReply.Unmarshal(m, b)
}
func (m *SetConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigReply.Marshal(b, m, deterministic)
}
func (m *SetConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigReply.Merge(m, src)
}
func (m *SetConfigReply) XXX_Size() int {
	return xxx_messageInfo_SetConfigReply.Size(m)
}
func (m *SetConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigReply proto.InternalMessageInfo

func (m *SetConfigReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type SetAdjustmentRequest struct {
	// node_name is node name used to acquire this configuration.
	NodeName string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Serialized map of all adjustment CRDs, name as key, CRD as value.
	Adjustment           string   `protobuf:"bytes,2,opt,name=adjustment,proto3" json:"adjustment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAdjustmentRequest) Reset()         { *m = SetAdjustmentRequest{} }
func (m *SetAdjustmentRequest) String() string { return proto.CompactTextString(m) }
func (*SetAdjustmentRequest) ProtoMessage()    {}
func (*SetAdjustmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d9bc9cf5b527561, []int{2}
}

func (m *SetAdjustmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAdjustmentRequest.Unmarshal(m, b)
}
func (m *SetAdjustmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAdjustmentRequest.Marshal(b, m, deterministic)
}
func (m *SetAdjustmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAdjustmentRequest.Merge(m, src)
}
func (m *SetAdjustmentRequest) XXX_Size() int {
	return xxx_messageInfo_SetAdjustmentRequest.Size(m)
}
func (m *SetAdjustmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAdjustmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAdjustmentRequest proto.InternalMessageInfo

func (m *SetAdjustmentRequest) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *SetAdjustmentRequest) GetAdjustment() string {
	if m != nil {
		return m.Adjustment
	}
	return ""
}

type SetAdjustmentReply struct {
	// If not empty, indicates that errors happened while trying to apply the adjustments.
	Errors               map[string]string `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetAdjustmentReply) Reset()         { *m = SetAdjustmentReply{} }
func (m *SetAdjustmentReply) String() string { return proto.CompactTextString(m) }
func (*SetAdjustmentReply) ProtoMessage()    {}
func (*SetAdjustmentReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d9bc9cf5b527561, []int{3}
}

func (m *SetAdjustmentReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAdjustmentReply.Unmarshal(m, b)
}
func (m *SetAdjustmentReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAdjustmentReply.Marshal(b, m, deterministic)
}
func (m *SetAdjustmentReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAdjustmentReply.Merge(m, src)
}
func (m *SetAdjustmentReply) XXX_Size() int {
	return xxx_messageInfo_SetAdjustmentReply.Size(m)
}
func (m *SetAdjustmentReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAdjustmentReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetAdjustmentReply proto.InternalMessageInfo

func (m *SetAdjustmentReply) GetErrors() map[string]string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func init() {
	proto.RegisterType((*SetConfigRequest)(nil), "v1.SetConfigRequest")
	proto.RegisterMapType((map[string]string)(nil), "v1.SetConfigRequest.ConfigEntry")
	proto.RegisterType((*SetConfigReply)(nil), "v1.SetConfigReply")
	proto.RegisterType((*SetAdjustmentRequest)(nil), "v1.SetAdjustmentRequest")
	proto.RegisterType((*SetAdjustmentReply)(nil), "v1.SetAdjustmentReply")
	proto.RegisterMapType((map[string]string)(nil), "v1.SetAdjustmentReply.ErrorsEntry")
}

func init() {
	proto.RegisterFile("pkg/cri/resource-manager/config/api/v1/api.proto", fileDescriptor_2d9bc9cf5b527561)
}

var fileDescriptor_2d9bc9cf5b527561 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0xd9, 0xa2, 0x8d, 0x0c, 0xd1, 0x90, 0x0d, 0x31, 0x0d, 0x26, 0x86, 0xec, 0xc1, 0x70,
	0xb1, 0xb5, 0x78, 0x10, 0xb9, 0x29, 0xe1, 0xea, 0x01, 0x6e, 0x5e, 0xcc, 0x0a, 0x23, 0x41, 0xe8,
	0x6e, 0xdd, 0x6e, 0x9b, 0xf0, 0x02, 0x5e, 0x7c, 0x0d, 0x1f, 0xd4, 0x74, 0x77, 0x43, 0x6a, 0xc3,
	0x41, 0x4f, 0xed, 0xfc, 0xf9, 0xe7, 0x9f, 0x99, 0xaf, 0x85, 0x9b, 0x74, 0xb3, 0x8a, 0x16, 0x6a,
	0x1d, 0x29, 0xcc, 0x64, 0xae, 0x16, 0x78, 0x9d, 0x70, 0xc1, 0x57, 0xa8, 0xa2, 0x85, 0x14, 0x6f,
	0xeb, 0x55, 0xc4, 0xd3, 0x75, 0x54, 0xc4, 0xe5, 0x23, 0x4c, 0x95, 0xd4, 0x92, 0x7a, 0x45, 0xcc,
	0xbe, 0x09, 0x74, 0xe6, 0xa8, 0x27, 0xc6, 0x32, 0xc3, 0x8f, 0x1c, 0x33, 0x4d, 0x2f, 0xa0, 0x25,
	0xe4, 0x12, 0x5f, 0x04, 0x4f, 0x30, 0x20, 0x7d, 0x32, 0x68, 0xcd, 0x4e, 0x4a, 0xe1, 0x89, 0x27,
	0x48, 0x47, 0xe0, 0xdb, 0xc0, 0xc0, 0xeb, 0x37, 0x07, 0xed, 0x61, 0x3f, 0x2c, 0xe2, 0xb0, 0x1e,
	0x11, 0xda, 0x6a, 0x2a, 0xb4, 0xda, 0xcd, 0x9c, 0xbf, 0x77, 0x0f, 0xed, 0x8a, 0x4c, 0x3b, 0xd0,
	0xdc, 0xe0, 0xce, 0xe5, 0x97, 0xaf, 0xb4, 0x0b, 0xc7, 0x05, 0xdf, 0xe6, 0x18, 0x78, 0x46, 0xb3,
	0xc5, 0xd8, 0x1b, 0x11, 0x76, 0x05, 0x67, 0x95, 0x11, 0xe9, 0xd6, 0x78, 0x51, 0x29, 0xa9, 0x5c,
	0xbf, 0x2d, 0xd8, 0x1c, 0xba, 0x73, 0xd4, 0x0f, 0xcb, 0xf7, 0x3c, 0xd3, 0x09, 0x0a, 0xfd, 0xa7,
	0x8b, 0x2e, 0x01, 0xf8, 0xbe, 0xc3, 0xcd, 0xae, 0x28, 0xec, 0x8b, 0x00, 0xad, 0xa5, 0x96, 0x1b,
	0x8c, 0xc1, 0x37, 0x43, 0xb3, 0x80, 0x18, 0x10, 0xcc, 0x81, 0xa8, 0xf9, 0xc2, 0xa9, 0x31, 0x39,
	0x14, 0xb6, 0xa3, 0x44, 0x51, 0x91, 0xff, 0x83, 0x62, 0xf8, 0x49, 0xc0, 0xb7, 0x20, 0xe8, 0x1d,
	0xb4, 0xf6, 0x54, 0x68, 0xf7, 0xd0, 0x77, 0xe8, 0xd1, 0x9a, 0x9a, 0x6e, 0x77, 0xac, 0x41, 0x27,
	0x70, 0xfa, 0x6b, 0x51, 0x1a, 0x1c, 0xd8, 0xdd, 0x06, 0x9c, 0x1f, 0xbe, 0x8a, 0x35, 0x1e, 0x8f,
	0x9e, 0xbd, 0x22, 0x7e, 0xf5, 0xcd, 0xbf, 0x74, 0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x0c,
	0xf3, 0xeb, 0x7f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigClient is the client API for Config service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigClient interface {
	SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigReply, error)
	SetAdjustment(ctx context.Context, in *SetAdjustmentRequest, opts ...grpc.CallOption) (*SetAdjustmentReply, error)
}

type configClient struct {
	cc *grpc.ClientConn
}

func NewConfigClient(cc *grpc.ClientConn) ConfigClient {
	return &configClient{cc}
}

func (c *configClient) SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigReply, error) {
	out := new(SetConfigReply)
	err := c.cc.Invoke(ctx, "/v1.Config/SetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configClient) SetAdjustment(ctx context.Context, in *SetAdjustmentRequest, opts ...grpc.CallOption) (*SetAdjustmentReply, error) {
	out := new(SetAdjustmentReply)
	err := c.cc.Invoke(ctx, "/v1.Config/SetAdjustment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigServer is the server API for Config service.
type ConfigServer interface {
	SetConfig(context.Context, *SetConfigRequest) (*SetConfigReply, error)
	SetAdjustment(context.Context, *SetAdjustmentRequest) (*SetAdjustmentReply, error)
}

// UnimplementedConfigServer can be embedded to have forward compatible implementations.
type UnimplementedConfigServer struct {
}

func (*UnimplementedConfigServer) SetConfig(ctx context.Context, req *SetConfigRequest) (*SetConfigReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetConfig not implemented")
}
func (*UnimplementedConfigServer) SetAdjustment(ctx context.Context, req *SetAdjustmentRequest) (*SetAdjustmentReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAdjustment not implemented")
}

func RegisterConfigServer(s *grpc.Server, srv ConfigServer) {
	s.RegisterService(&_Config_serviceDesc, srv)
}

func _Config_SetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).SetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.Config/SetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).SetConfig(ctx, req.(*SetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Config_SetAdjustment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAdjustmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServer).SetAdjustment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.Config/SetAdjustment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServer).SetAdjustment(ctx, req.(*SetAdjustmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Config_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.Config",
	HandlerType: (*ConfigServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetConfig",
			Handler:    _Config_SetConfig_Handler,
		},
		{
			MethodName: "SetAdjustment",
			Handler:    _Config_SetAdjustment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/cri/resource-manager/config/api/v1/api.proto",
}
